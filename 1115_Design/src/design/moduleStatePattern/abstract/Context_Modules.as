package design.moduleStatePattern.abstract{import com.dell.alienFx.GlobalAnim;import com.dell.alienFx.SwatchAFX;import com.dell.services.TrackEvent;import com.dpa.utils.object.addHandCurserNoChildren;import com.greensock.TweenLite;import com.greensock.plugins.TintPlugin;import com.greensock.plugins.TweenPlugin;import design.Omniture.Tracking;import flash.display.MovieClip;import design.moduleStatePattern.Design17;import design.moduleStatePattern.Design14;import design.moduleStatePattern.Design18;import flash.display.Sprite;import flash.events.MouseEvent;//Context class	public class Context_Modules extends Sprite	{		private var design14State:IState;		private var design17State:IState;		private var design18State:IState;		private var state:IState;        private var _data:Object;        public var coaw14Array:Array;        public var coaw17Array:Array;        public var coaw18Array:Array;        private var _icons:MovieClip;		public function Context_Modules(icons:MovieClip)		{            TweenPlugin.activate([TintPlugin]);            _icons = icons;            coaw14Array = new Array();            coaw17Array = new Array();            coaw18Array = new Array();            TweenLite.to(icons.aw14.fill, 0, {tint:SwatchAFX.LINK_TEAL});            icons.aw17.alpha = 0;            icons.aw18.alpha = 0;		}        public function addAW14State(_target:MovieClip, data:Object):void {            _data = data;            design14State = new Design14(this, _target, data.aw14, _icons);            _icons.aw14.hitBox.addEventListener(MouseEvent.CLICK, activateDesign14, false, 0, true);            addHandCurserNoChildren(_icons.aw14.hitBox);            state=design14State;        }         public function addAW17State(_target:MovieClip, data:Object):void {            _data = data;            design17State = new Design17(this, _target, data.aw17, _icons);            _icons.aw17.hitBox.addEventListener(MouseEvent.CLICK, activateDesign17, false, 0, true);            TweenLite.to(_icons.aw17, GlobalAnim.TRANSISITION, {alpha: 1});            addHandCurserNoChildren(_icons.aw17.hitBox);        }         public function addAW18State(_target:MovieClip, data:Object):void {            _data = data;            design18State = new Design18(this, _target, data.aw18, _icons);            _icons.aw18.hitBox.addEventListener(MouseEvent.CLICK, activateDesign18, false, 0, true);             TweenLite.to(_icons.aw18, GlobalAnim.TRANSISITION, {alpha:1});            addHandCurserNoChildren(_icons.aw18.hitBox);        }        public function addEventHandlers():void {            _icons.aw14.hitBox.addEventListener(MouseEvent.CLICK, activateDesign14, false, 0, true);            _icons.aw17.hitBox.addEventListener(MouseEvent.CLICK, activateDesign17, false, 0, true);            _icons.aw18.hitBox.addEventListener(MouseEvent.CLICK, activateDesign18, false, 0, true);        }        public function removeEventHandlers():void {            _icons.aw14.hitBox.removeEventListener(MouseEvent.CLICK, activateDesign14);            _icons.aw17.hitBox.removeEventListener(MouseEvent.CLICK, activateDesign17);            _icons.aw18.hitBox.removeEventListener(MouseEvent.CLICK, activateDesign18);        }		public function activateDesign14(event:MouseEvent = null):void		{            var tEvt:TrackEvent = new TrackEvent('button','Design-Show-AW14-360');            design.Omniture.Tracking.trackMetrics(tEvt);			state.activateDesign14();		}		public function activateDesign17(event:MouseEvent = null):void		{            var tEvt:TrackEvent = new TrackEvent('button','Design-Show-AW17-360');            design.Omniture.Tracking.trackMetrics(tEvt);			state.activateDesign17();		}        public function activateDesign18(event:MouseEvent = null):void {            var tEvt:TrackEvent = new TrackEvent('button','Design-Show-AW18-360');            design.Omniture.Tracking.trackMetrics(tEvt);            state.activateDesign18();        }		public function setState(state:IState):void		{			this.state=state;		}		public function getState():IState		{			return state;		}		public function getDesign14State():IState		{			return this.design14State;		}		public function getDesign17State():IState		{			return this.design17State;		}        public function getDesign18State():IState {            return this.design18State;        }        //EVENT Handlers	}}