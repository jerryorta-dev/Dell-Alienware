package design.calloutObserverPattern.observers.controls{import design.calloutObserverPattern.observers.controls.abstract.Context_Button_ON_OFF;import design.calloutObserverPattern.observers.controls.abstract.IState_ButtonONOFF;import design.calloutObserverPattern.subjects.ConcreteCallOutSubject;import com.greensock.events.LoaderEvent;import com.greensock.loading.SWFLoader;import flash.display.MovieClip;import flash.display.Sprite;import design.moduleStatePattern.abstract.Context_Modules;import design.moduleStatePattern.abstract.IState;import design.calloutObserverPattern.observers.CallOut;import design.calloutObserverPattern.observers.CallOutContainer;import utils.display.addChild;//Stop State;	public class ButtonOVERState implements IState_ButtonONOFF	{        private var buttons:Context_Button_ON_OFF;        private var newState:IState_ButtonONOFF;        private var target:Sprite;        private var concreteSubject:ConcreteCallOutSubject;		public function ButtonOVERState(_buttons:Context_Button_ON_OFF, _target:Sprite)		{			this.buttons=_buttons;            this.target = _target;//            buildUI();		}		public function ON():void		{//            trace("toggle ON = ButtonOverState")		}		public function OFF():void		{//            trace("toggle OFF = ButtonOverState")            newState = buttons.getOnButtonState();            transitionOut();		}        public function OVER():void {//            trace("toggle Over = ButtonOverState")        }        public function transitionOut():void {//            trace("transition from " + buttons.getState())        }        public function transitionOn():void {            buttons.setState( newState );        }        public function buildUI():void {        }	}}